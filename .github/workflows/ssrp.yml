name: Build ssrp

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      package_version:
        description: '请填写包版本'
        required: false
        default: 'packages-24.10'  

jobs:
  build:
    runs-on: ubuntu-22.04  # 设置为 Ubuntu 22.0

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Clone makeself repo
        run: |
          git clone https://github.com/megastep/makeself.git

      - name: Create directories for x86_64 and a53
        run: |
          mkdir -p x86_64/depends a53/depends

      - name: Download ipk files for x86_64 and a53
        run: |
          package_version="${{ github.event.inputs.package_version }}"
          if [ -z "$package_version" ]; then
            package_version="packages-24.10"
          fi
          echo $package_version
          FILE_PREFIXES=("dns2tcp" "lua-neturl" "chinadns-ng" "dns2socks" "hysteria" "ipt2socks" "microsocks" "mosdns" "naiveproxy" "redsocks2" "shadowsocksr-libev" "shadowsocks-rust" "shadow-tls" "simple-obfs-client" "tcping" "trojan" "tuic-client" "v2ray-plugin" "xray-core" "luci-app-ssr-plus")

          # 排除的前缀列表
          EXCLUDE_PREFIXES=("luci-app-chinadns-ng" "luci-app-microsocks" "luci-app-mosdns" "luci-app-naiveproxy" "luci-app-redsocks2" "luci-app-shadowsocks")

          BASE_URL_X86="https://dl.openwrt.ai/$package_version/x86_64/kiddin9/"

          echo "Fetching directory page from $BASE_URL_X86"
          wget -qO- "$BASE_URL_X86" | \
          while IFS= read -r LINE; do
              for PREFIX in "${FILE_PREFIXES[@]}"; do
                  # 使用 grep 检查文件名是否匹配
                  if [[ "$LINE" == *"$PREFIX"* ]]; then
                      # 提取文件名
                      FILE=$(echo "$LINE" | grep -oP 'href="\K[^"]*')
                      if [[ -z "$FILE" ]]; then
                          # echo "No file found in line, skipping"
                          continue
                      fi
                      # 判断文件是否以排除的前缀开头
                      exclude_file=false
                      for exclude_prefix in "${EXCLUDE_PREFIXES[@]}"; do
                          if [[ "$FILE" == $exclude_prefix* ]]; then
                              exclude_file=true
                              break
                          fi
                      done
                      # 如果是排除的文件，则跳过
                      if $exclude_file; then
                          echo "Excluding file: $FILE"
                          continue
                      fi

                      # 生成文件 URL
                      FILE_URL="${BASE_URL_X86}${FILE}"

                      # 打印找到的文件 URL
                      echo "Found file: $FILE_URL"

                      # 下载文件
                      curl -L --fail "$FILE_URL" -o "x86_64/depends/$(basename $FILE_URL)" -#
                    fi
              done
          done



          BASE_URL_A53="https://dl.openwrt.ai/$package_version/aarch64_cortex-a53/kiddin9/"
          echo "Fetching directory page from $BASE_URL_A53"
          wget -qO- "$BASE_URL_A53" | \
          while IFS= read -r LINE; do
              for PREFIX in "${FILE_PREFIXES[@]}"; do
                  # 使用 grep 检查文件名是否匹配
                  if [[ "$LINE" == *"$PREFIX"* ]]; then  
                        FILE=$(echo "$LINE" | grep -oP 'href="\K[^"]*')
                        if [[ -z "$FILE" ]]; then
                            # echo "No file found in line, skipping"
                            continue
                        fi
                        FILE_URL="${BASE_URL_A53}${FILE}"
                        # URL
                        echo "Found file: $FILE_URL"
                        curl -L --fail "$FILE_URL" -o "a53/depends/$(basename $FILE_URL)" -#
                    fi
              done
          done
        

  
      - name: Copy install.sh to a53
        run: |
          ls -lh x86_64/depends/
          ls -lh a53/depends/

   