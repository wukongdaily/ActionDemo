name: TestDemo

on:
  workflow_dispatch:
    inputs:
      docker_images:
        description: '请填写docker镜像名称，多个用英文逗号分开'
        required: true
        default: 'alpine:latest,alpine/curl'  # 修改默认镜像列表

jobs:
  pull_and_package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Pull Docker Images and Package
        run: |
          images="${{ github.event.inputs.docker_images }}"
          IFS=',' read -r -a image_array <<< "$images"
          for image in "${image_array[@]}"; do
            # 拉取镜像
            docker pull "${image}" --platform "linux/amd64"
            # 保存为 .tar 文件，替换 / 和 : 为 _，避免文件路径问题
            image_name="${image//\//_}"  # 将 / 替换为 _
            image_name="${image_name//:/_}"  # 将 : 替换为 _
            docker save "${image}" -o "${image_name}-amd64.tar"
            # 压缩为 .tar.gz 文件
            tar -czf "${image_name}.tar.gz" "${image_name}-amd64.tar"
          done

      - name: List generated files (debug step)
        run: |
          echo "Current working directory:"
          pwd
          echo "Listing .tar.gz files:"
          find $GITHUB_WORKSPACE -name "*.tar.gz"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@master
        with:
          tag_name: Test
          release_name: Test For ActionDemo
          body: Automatically generated release.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set files for release
        id: set_files
        run: |
          # 查找所有 .tar.gz 文件并输出到环境变量中
          files=$(find $GITHUB_WORKSPACE -name "*.tar.gz")
          echo "Found files: $files"
          
          # 将文件路径存储到一个数组中
          files_array=($files)
          
          # 将每个文件路径保存到环境变量中
          for file in "${files_array[@]}"; do
            echo "FILES=${file}" >> $GITHUB_ENV
          done

      - name: Upload Docker images as release assets
        uses: softprops/action-gh-release@master
        with:
          tag_name: Test
          files: ${{ env.FILES }}  # 使用环境变量中的文件路径
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up intermediate files
        run: rm *-amd64.tar
