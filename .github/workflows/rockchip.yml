name: Build Rockchip ImageBuilder

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        platform:
          - rockchip
          #- mediatek_filogic

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3
    
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gcc-multilib g++-multilib gettext \
          genisoimage git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev \
          libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev \
          libreadline-dev libssl-dev libtool llvm lrzsz msmtp ninja-build p7zip p7zip-full patch pkgconf \
          python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion \
          swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          

      - name: Clone Lede source
        run: git clone --depth=1 https://github.com/coolsnowwolf/lede.git

      - name: Update feeds
        run: |
          cd lede
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Setup config for ${{ matrix.platform }}
        run: |
          cd lede
          if [ "${{ matrix.platform }}" = "rockchip" ]; then
            echo "CONFIG_TARGET_rockchip=y" > .config
            echo "CONFIG_TARGET_rockchip_armv8=y" >> .config
            echo "CONFIG_TARGET_rockchip_armv8_DEVICE_radxa_e20c=y" >> .config
            echo "CONFIG_IB=y" >> .config
          elif [ "${{ matrix.platform }}" = "mediatek_filogic" ]; then
            echo "CONFIG_TARGET_mediatek=y" > .config
            echo "CONFIG_TARGET_mediatek_filogic=y" >> .config
            echo "CONFIG_TARGET_mediatek_filogic_DEVICE_glinet_gl-mt3000=y" >> .config
            echo "CONFIG_IB=y" >> .config
          fi
          make defconfig

      - name: Copy Makefile into lede
        run: |
          cp ./target/imagebuilder/files/Makefile ./lede/target/imagebuilder/files/Makefile
          echo "Checking if ROOTFS_PARTSIZE exists in the copied Makefile:"
          grep "ROOTFS_PARTSIZE" ./lede/target/imagebuilder/files/Makefile || echo "Not found"

      - name: Build ImageBuilder for ${{ matrix.platform }}
        run: |
          cd lede
          make -j$(nproc) V=s

      - name: Upload ImageBuilder ${{ matrix.platform }}
        uses: actions/upload-artifact@v4
        with:
          name: imagebuilder-${{ matrix.platform }}
          path: |
            lede/bin/targets/**/*.tar.xz
            lede/bin/targets/**/*.manifest
            lede/bin/targets/**/*.json
          
