name: TestDemo

on:
  workflow_dispatch:
    inputs:
      docker_images:
        description: '请填写docker镜像名称，多个用英文逗号分开'
        required: true
        default: 'alpine:latest,alpine/curl'

jobs:
  pull_and_package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Pull Docker Images and Package
        run: |
          images="${{ github.event.inputs.docker_images }}"
          IFS=',' read -r -a image_array <<< "$images"
          for image in "${image_array[@]}"; do
            # 拉取镜像
            docker pull "${image}" --platform "linux/amd64"
            # 保存为 .tar 文件，替换 / 和 : 为 _，避免文件路径问题
            image_name="${image//\//_}"  # 将 / 替换为 _
            image_name="${image_name//:/_}"  # 将 : 替换为 _
            docker save "${image}" -o "${image_name}-amd64.tar"
            # 压缩为 .tar.gz 文件
            tar -czf "${image_name}-amd64.tar.gz" "${image_name}-amd64.tar"
          done

      - name: List generated files (debug step)
        run: ls -l

      - name: Create GitHub Release
        uses: softprops/action-gh-release@master
        with:
          tag_name: Test
          release_name: Test For ActionDemo
          body: Automatically generated release.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload each Docker image as release asset
        uses: softprops/action-gh-release@master
        with:
          tag_name: Test
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          files: |
            ${{ github.workspace }}/*-amd64.tar.gz  # 上传所有的 .tar.gz 文件
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up intermediate files
        run: rm *-amd64.tar
