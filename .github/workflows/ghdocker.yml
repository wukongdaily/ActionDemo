name: Deploy gh

on:
  workflow_dispatch:  # 手动触发工作流

jobs:
  deploy:
    runs-on: ubuntu-22.04  # 使用已预装 Docker 的 Ubuntu 22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Create nginx.conf
      run: |
        cat <<'EOF' > nginx.conf
        server {
            listen 80;
            server_name localhost;

            location / {
                proxy_pass https://hub.docker.com;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_ssl_verify off;
            }
        }
        EOF
        cat nginx.conf  # 输出 nginx.conf 文件内容，以便调试

    - name: Run nginx-proxy Docker container
      run: |
        # 确保 nginx.conf 文件存在
        ls -l nginx.conf
        # 运行 Nginx 容器
        docker run -d \
            --name nginx-proxy \
            -p 8080:80 \
            -v $(pwd)/nginx.conf:/etc/nginx/nginx.conf \
            nginx:latest
    
    - name: Check running containers
      run: docker ps  # 显示正在运行的容器

    - name: Debug nginx configuration
      run: |
        # 测试 Nginx 配置是否正确
        docker exec nginx-proxy nginx -t || echo "Nginx configuration test failed"
    
    - name: Output Nginx container logs
      run: |
        # 输出 Nginx 容器的日志，帮助调试
        docker logs nginx-proxy

    - name: Install ngrok
      run: |
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc > /dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list > /dev/null
        sudo apt update
        sudo apt install -y ngrok

    - name: Login to ngrok
      run: |
        ngrok config add-authtoken 2qZR0FVfkTlsvBgZEMekdCGyxzE_6mYLLzLoQ9cPQ6sFyj7E6

    - name: Expose Halo with ngrok HTTP
      run: |
        # 使用 ngrok 将端口 8080 暴露为公共 URL
        ngrok http 8080 > /dev/null &
        sleep 5  # 等待 ngrok 启动
        echo "Halo public URL:"
        curl -s http://127.0.0.1:4040/api/tunnels | jq '.tunnels[] | select(.proto=="https") | .public_url'

    - name: Keep Action Running
      run: sleep 21600   # 保持 Action 持续运行 6 小时，以防 ngrok 连接中断
