name: Compile The New Version OpenClash

on: 
  push:
    branches:
      - dev
    paths:
      - 'luci-app-openclash/Makefile'
  workflow_dispatch:

jobs:
  Get-Version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      current_version: ${{ steps.current_version.outputs.version }}
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: New Version
        id: version
        run: |
          echo "version=$(grep 'PKG_VERSION:=' ./luci-app-openclash/Makefile |awk -F '=' '{print $2}')" >> $GITHUB_OUTPUT
          echo "New Version: $(grep 'PKG_VERSION:=' ./luci-app-openclash/Makefile |awk -F '=' '{print $2}')"

      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          ref: package

      - name: Current Version
        id: current_version
        run: |
          echo "version=$(sed -n 1p ./${{ github.ref_name }}/version |awk -F '-' '{print $1}' |awk -F 'v' '{print $2}')" >> $GITHUB_OUTPUT
          echo "Current Version: $(sed -n 1p ./${{ github.ref_name }}/version |awk -F '-' '{print $1}' |awk -F 'v' '{print $2}')"

  Compile:
    runs-on: ubuntu-latest
    needs: Get-Version
    if: ${{ needs.Get-Version.outputs.version != needs.Get-Version.outputs.current_version }}
    steps:
      - name: Clone OpenClash dev Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Apt Update
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get -y install curl git tar

      - name: Install OpenWrt SDK
        run: |
          cd ..
          mkdir tmp
          curl -SLk --connect-timeout 30 --retry 2 "https://archive.openwrt.org/chaos_calmer/15.05.1/ar71xx/generic/OpenWrt-SDK-15.05.1-ar71xx-generic_gcc-4.8-linaro_uClibc-0.9.33.2.Linux-x86_64.tar.bz2" -o "./tmp/SDK.tar.bz2"
          cd \tmp
          tar xjf SDK.tar.bz2
          mv "OpenWrt-SDK-15.05.1-ar71xx-generic_gcc-4.8-linaro_uClibc-0.9.33.2.Linux-x86_64" "SDK"

      - name: Copy OpenClash Source Codes
        run: |
          cd ..
          mkdir tmp/SDK/package/luci-app-openclash
          cp -rf "./OpenClash/luci-app-openclash/." "./tmp/SDK/package/luci-app-openclash/"

      - name: Compile po2lmo
        run: |
          cd ..
          cd tmp/SDK/package/
          pushd luci-app-openclash/tools/po2lmo
          make && sudo make install
          popd

      - name: Compile OpenClash IPK
        run: |
          cd ..
          cd tmp/SDK
          make package/luci-app-openclash/compile V=99
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@master
        with:
          tag_name: ipks
          name: ipk
          body: |
            ![GitHub Release](https://img.shields.io/github/v/release/wukongdaily/ActionDemo?style=for-the-badge&logoSize=amg&labelColor=%23FFBF00&color=%2300C598)
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Docker images as release assets
        uses: softprops/action-gh-release@master
        with:
          tag_name: ipks
          files: ${{ github.workspace }}/*.ipk
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      
